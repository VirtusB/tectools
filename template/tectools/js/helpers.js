/** * Oversættelses funktion til timeago * @param number * @param index * @param totalSec * @return {string[]} */const localeFunc = (number, index, totalSec) => {    return [        ['for et øjeblik siden', 'om et øjeblik'],        ['for %s sekunder siden', 'om %s sekunder'],        ['for 1 minut siden', 'om 1 minut'],        ['for %s minutter siden', 'om %s minutter'],        ['for 1 time siden', 'om 1 time'],        ['for %s timer siden', 'om %s timer'],        ['for 1 dag siden', 'om 1 dag'],        ['for %s dage siden', 'om %s dage'],        ['for 1 uge siden', 'om 1 uge'],        ['for %s uger siden', 'om %s uger'],        ['for 1 måned siden', 'om 1 måned'],        ['for %s måneder siden', 'om %s måneder'],        ['for 1 år siden', 'om 1 år'],        ['for %s år siden', 'om %s år']    ][index];};/** * Returnerer en tilfældig int * @param {int} min * @param {int} max * @returns {int} */function getRandomInteger(min, max) {    return Math.floor(Math.random() * (max - min + 1) ) + min;}/** * Opdaterer <img> element med det nye billede fra <input type="file"> elementet * @param {HTMLInputElement} input * @param {string} imgElementID */function updateImagePreview(input, imgElementID) {    let imgPreview = document.getElementById(imgElementID);    if (input.files && input.files[0]) {        let reader = new FileReader();        reader.onload = function (e) {            imgPreview.setAttribute('src', e.target.result);        };        reader.readAsDataURL(input.files[0]);    }}function setCookie(cname, cvalue, exdays) {    var d = new Date();    d.setTime(d.getTime() + (exdays*24*60*60*1000));    var expires = "expires="+ d.toUTCString();    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";}function getCookie(cname) {    var name = cname + "=";    var decodedCookie = decodeURIComponent(document.cookie);    var ca = decodedCookie.split(';');    for(var i = 0; i <ca.length; i++) {        var c = ca[i];        while (c.charAt(0) == ' ') {            c = c.substring(1);        }        if (c.indexOf(name) == 0) {            return c.substring(name.length, c.length);        }    }    return "";}function deleteCookie(name) {    document.cookie = name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';}if (getCookie('notificationFrontend') !== '') {    let options = JSON.parse(getCookie('notificationFrontend'));    switch (options.type) {        case 'success':            NotificationControl.success(options.title, options.message);            break;        case 'warning':            NotificationControl.warning(options.title, options.message);            break;        case 'error':            NotificationControl.error(options.title, options.message);            break;    }    deleteCookie('notificationFrontend');}