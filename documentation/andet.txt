Få alle tools og kategorier som værktøjet har
SELECT * FROM Tools p1
LEFT JOIN
Manufacturers p2 ON p1.FK_ManufacturerID = p2.ManufacturerID
LEFT JOIN
Categories p3 ON p3.CategoryID IN (SELECT FK_CategoryID FROM CategoryTools WHERE FK_ToolID = p1.ToolID)


Få alle kategorier med deres navne
SELECT * FROM Categories WHERE CategoryID IN (SELECT FK_CategoryID FROM CategoryTools WHERE FK_ToolID = 2)

Brug IF statements i Stored Procedures når vi skal filtrere på søgeord og kategorier
Mulighed for at vælge mere end 1 kategori
Brug LIMIT N, N til pagination


Slet gamle billeder efter upload

custom form location
account creation errors

rediger bruger
abonnement siden, gør pænere
slet værktøj

form validation js?

skriv på siden når en reservation er overskredet
notifikationer på hjemmesiden
notifikationer via email

UX test - bruger gruppe som skal teste sidens anvendelighed



<?php

abstract class Base {
    public static array $allowedEndpoints = [];

    private array $classes = [];

    public function __construct() {
        $this->classes[] = $this;
        $this->handlePOSTEndpoints();
    }

    public function handlePOSTEndpoints(): void {
        if (!isset($_POST['post_endpoint'])) {
            return;
        }

        $endpoint = $_POST['post_endpoint'];

        //foreach ($this->classes as $class) {
        //    if (method_exists($class, $endpoint) && in_array($endpoint, $class::$allowedEndpoints, true)) {
        //        $this->$endpoint();
        //    }
        //}

        if (method_exists($this, $endpoint) && in_array($endpoint, $this::$allowedEndpoints, true)) {
            $this->$endpoint();
        }
    }
}


<?php

class TecToolsCategories extends Base {
    /**
     * @var RCMS $RCMS
     */
    public RCMS $RCMS;

    public static array $allowedEndpoints = [
        'addCategory', 'editCategory'
    ];

    public function __construct(RCMS $RCMS) {
        $this->RCMS = $RCMS;

        parent::__construct();
    }

    /**
     * Tilføjer en kategori via en POST request
     * @return void
     */
    protected function addCategory(): void {
        if (!$this->RCMS->Login->isAdmin()) {
            return;
        }

        $categoryName = $_POST['category_name'];

        if ($this->categoryExists($categoryName)) {
            Helpers::setNotification('Fejl', 'Kategorien eksisterer allerede', 'error');
            return;
        }

        $this->RCMS->execute('CALL addCategory(?)', array('s', $categoryName));

        $this->RCMS->Logs->addLog(Logs::CREATE_CATEGORY_TYPE_ID, ['UserID' => $this->RCMS->Login->getUserID()]);

        Helpers::setNotification('Oprettet', 'Kategorien blev oprettet');

        Helpers::redirect('/dashboard');
    }

    /**
     * Tjekker om en kategori med samme navn allerede eksisterer i databasen
     * @param $name
     * @return bool
     */
    private function categoryExists($name): bool {
        $exists = $this->RCMS->execute('SELECT COUNT(*) AS count FROM Categories WHERE CategoryName = ?', array('s', $name))->fetch_object()->count;
        return $exists !== 0;
    }

    /**
     * Henter en kategori ud fra databasen
     * @param int $categoryID
     * @return array|null
     */
    public function getCategory(int $categoryID): ?array {
        $res = $this->RCMS->execute('CALL getCategory(?)', array('i', $categoryID));
        return $res->fetch_assoc();
    }

    /**
     * Redigerer en kategori via en POST request
     * @return void
     */
    protected function editCategory(): void {
        if (!is_numeric($_POST['category_id']) || !$this->RCMS->Login->isAdmin() ) {
            return;
        }

        $categoryID = (int) $_POST['category_id'];
        $categoryName = $_POST['category_name'];

        if ($this->categoryExists($categoryName)) {
            Helpers::setNotification('Fejl', 'Kategorien eksisterer allerede', 'error');
            return;
        }

        $this->RCMS->execute('CALL editCategory(?, ?)', array('is', $categoryID, $categoryName));

        $this->RCMS->Logs->addLog(Logs::EDIT_CATEGORY_TYPE_ID, ['UserID' => $this->RCMS->Login->getUserID()]);

        Helpers::setNotification('Gemt', 'Dine ændringer blev gemt');

        Helpers::redirect('/dashboard');
    }

    /**
     * Fjerner alle kategorier fra et værktøj
     * @param int $toolID
     * @return void
     */
    public function removeAllCategoriesFromTool(int $toolID): void {
        if (!$this->RCMS->Login->isAdmin()) {
            return;
        }

        $this->RCMS->execute('CALL removeAllCategoriesFromTool(?)', array('i', $toolID));
    }
}